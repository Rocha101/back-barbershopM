generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  username   String?
  password   String
  phone      String?
  start_time String?
  end_time   String?
  events     Event[]
  services   Service[]
  products   Product[]
  schedules  Schedule[]
  sale       Sale[]
  locations  Location[]
}

model Customer {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  username  String
  phone     String?
  events    Event[]
  schedules Schedule[]
}

model Event {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  start_time  DateTime
  end_time    DateTime
  userId      Int
  customerId  Int?
  serviceId   Int
  scheduleId  Int       @unique
  user        User      @relation(fields: [userId], references: [id])
  customer    Customer? @relation(fields: [customerId], references: [id])
  service     Service   @relation(fields: [serviceId], references: [id])
  schedule    Schedule  @relation(fields: [scheduleId], references: [id])

  @@index([userId])
  @@index([customerId])
  @@index([serviceId])
}

model Service {
  id          Int        @id @default(autoincrement())
  description String
  price       Float
  userId      Int
  total_time  String
  user        User       @relation(fields: [userId], references: [id])
  events      Event[]
  schedules   Schedule[]

  @@index([userId])
}

model Product {
  id          Int    @id @default(autoincrement())
  description String
  price       Float
  quantity    Int
  status      String
  userId      Int
  saleId      Int?
  user        User   @relation(fields: [userId], references: [id])
  sale        Sale?  @relation(fields: [saleId], references: [id])

  @@index([userId])
  @@index([saleId])
}

model BuyerInfo {
  id       Int     @id @default(autoincrement())
  name     String
  phone    String?
  document String?
  sales    Sale[]
}

model Sale {
  id             Int       @id @default(autoincrement())
  customerInfoId Int       @unique
  userId         Int
  total_price    Float
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  customerInfo   BuyerInfo @relation(fields: [customerInfoId], references: [id])
  products       Product[]
  user           User      @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Schedule {
  id         Int       @id @default(autoincrement())
  customerId Int?
  userId     Int
  eventId    Int?
  locationId Int?
  customer   Customer? @relation(fields: [customerId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
  events     Event?
  services   Service[]
  location   Location? @relation(fields: [locationId], references: [id])

  @@index([customerId])
  @@index([locationId])
  @@index([userId])
}

model Location {
  id          Int        @id @default(autoincrement())
  description String
  userId      Int
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id])
  schedules   Schedule[]

  @@index([userId])
}

model ScheduleToService {
  A Int
  B Int

  @@unique([A, B], map: "_ScheduleToService_AB_unique")
  @@index([B], map: "_ScheduleToService_B_index")
  @@map("_ScheduleToService")
}
